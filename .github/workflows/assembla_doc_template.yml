name: Build Tesina PDF

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'config.yml'
      - 'styles/**'
      - '.github/**/**'

permissions:
  contents: write
  pages: write
  id-token: write
  
jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/kjarosh/latex:2025.1-small

    steps:
    - name: Install dependencies
      run: |
        apk add --no-cache git bash python3 py3-pip pandoc
        pip install --break-system-packages pyyaml

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Extract metadata & concatenate markdown
      run: |
        rm -f README.md *.pdf        
        python3 .github/scripts/build-tesina.py

    - name: Build PDF with Pandoc
      run: |
        TITLE=$TITOLO
        SAFE_TITLE=$(echo "$TITLE" | tr ' ' '_' | tr -cd '[:alnum:]_')
        TIMESTAMP=$(date +%Y%m%d_%H%M%S)
        #PDF_NAME="${SAFE_TITLE}-${TIMESTAMP}.pdf"
        PDF_NAME="${SAFE_TITLE}-CONSAQ-${TIMESTAMP}.pdf"
        pandoc README.md \
          --pdf-engine=pdflatex \
          --variable=titolo:"$TITOLO" \
          --variable=sottotitolo:"$SOTTOTITOLO" \
          --variable=candidato:"$CANDIDATO" \
          --variable=materia:"$MATERIA" \
          --variable=data:"$DATA" \
          --variable=conservatorio:"$CONSERVATORIO" \
          --variable=città:"$CITTÀ" \
          --variable=corso:"$CORSO" \
          -o "$PDF_NAME"
        echo "PDF_NAME=$PDF_NAME" >> $GITHUB_ENV
        mkdir -p pages_artifact
        cp "${PDF_NAME}" pages_artifact/latest.pdf
    - uses: actions/upload-artifact@v4
      with:
        name: progetto-completo_pdf
        path: "${{ env.PDF_NAME }}"
        overwrite: true
 
    - name: Upload artifact per Pages
      uses: actions/upload-pages-artifact@v4
      with:
        path: pages_artifact


    - name: Commit del documento assemblato
      run: |
        cd "$GITHUB_WORKSPACE"
        git config --global --add safe.directory "$GITHUB_WORKSPACE"
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        rm -f *.pdf
        git add -u
        git add README.md
        git diff --staged --quiet || git commit -m "Auto-aggiornamento documento con template [skip ci]"
        
    - name: Push delle modifiche
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: main
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy su GitHub Pages
        uses: actions/deploy-pages@v4
